<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hello World</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-02-22T07:23:17.123Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>HarrisV</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Welcome to HarrisV&#39;s blog</title>
    <link href="http://example.com/2023/02/22/hello-world/"/>
    <id>http://example.com/2023/02/22/hello-world/</id>
    <published>2023-02-22T02:07:29.556Z</published>
    <updated>2023-02-22T07:23:17.123Z</updated>
    
    <content type="html"><![CDATA[<h1 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h1><p>人工智能、机器学习和深度学习的关系</p><p>机器学习是实现人工智能的方法，深度学习是实现机器学习的技术，如图。机器学习的一系列算法可以理解为数学模型。</p><h2 id="机器学习概述"><a href="#机器学习概述" class="headerlink" title="机器学习概述"></a>机器学习概述</h2><p>机器学习的重点在于使用算法解析数据，从中学习对数据的理解，然后对某件任务做出决定或预测。</p><h2 id="机器学习分类"><a href="#机器学习分类" class="headerlink" title="机器学习分类"></a>机器学习分类</h2><p>机器学习主要有四种类型：有监督学习、无监督学习、强化学习、深度学习与神经网络</p><h3 id="有监督学习（Supervised-Learning）"><a href="#有监督学习（Supervised-Learning）" class="headerlink" title="有监督学习（Supervised Learning）"></a>有监督学习（Supervised Learning）</h3><p>有监督学习给定一组带有标记（特征）的数据集，计算机在既定的算法下学习该特征进而识别每种标记的新样本。有监督学习主要有两种，回归和分类。</p><h4 id="分类（Classification）"><a href="#分类（Classification）" class="headerlink" title="分类（Classification）"></a>分类（Classification）</h4><p>这种任务是训练计算机将一组数据划分为特定的类。</p><h4 id="回归（Regression）"><a href="#回归（Regression）" class="headerlink" title="回归（Regression）"></a>回归（Regression）</h4><p>试着推测出一系列连续值属性，即用一条连续的线来拟合一系列离散的数据，以达到预测其他新值的效果。</p><h3 id="无监督学习（Unsupervised-Learning）"><a href="#无监督学习（Unsupervised-Learning）" class="headerlink" title="无监督学习（Unsupervised Learning）"></a>无监督学习（Unsupervised Learning）</h3><p>无监督学习的数据集是没有带人为的标记的，即无标签，主要有<strong>聚类</strong>和<strong>降维</strong>。简单而言，有监督学习的数据是有明确的标签，能够有明确的类别或数值。而无监督学习则只有一堆数据，没有任何类别或数值，都是有计算机来发现。</p><h4 id="聚类（Clustering）"><a href="#聚类（Clustering）" class="headerlink" title="聚类（Clustering）"></a>聚类（Clustering）</h4><p>根据属性、行为、阈值等将对象划分为若干个簇。与分类的区别在于，这些簇是有聚类算法决定的，不是预先决定的。常见的聚类算法：k-Means算法和期望值最大算法（Exceptation Maximization）。</p><h4 id="降维（Dimensionality-Reduction）"><a href="#降维（Dimensionality-Reduction）" class="headerlink" title="降维（Dimensionality Reduction）"></a>降维（Dimensionality Reduction）</h4><p>降维是通过找到相似点来减少数据集的特征量，但降维算法只提供减少维度的数量，共同点的特征含义需要人为的去发现。如：可以通过降维实现数据压缩，加快算法的速度。</p><h3 id="强化学习（Reinforcement-Learning）"><a href="#强化学习（Reinforcement-Learning）" class="headerlink" title="强化学习（Reinforcement Learning）"></a>强化学习（Reinforcement Learning）</h3><p><u>除了试图直接去建立一个可以模拟成人大脑的程序之外, 为什么不试图建立一个可以模拟小孩大脑的程序呢?如果它<strong>接受适当的教育</strong>, 就可能成长为成人的大脑（得到成长）. – Alan Turing</u></p><p>强化学习是指如何在<strong>环境</strong>中采取行动以最大化一些累积奖励，是对目标导向的学习与决策问题进行理解和主动化处理，强调<strong>智能体（Agent）</strong>与<strong>环境（Environment）</strong>的直接互动来学习，其与有监督学习和无监督学习的最大区别在于不需要大量的数据集去训练，是第三种机器学习范式</p><p>智能体：感知环境的<strong>状态（State）</strong>，根据反馈的<strong>奖励（Reward）</strong>学习一个合适的<strong>动作（Action）</strong>来最大化长期总收益。</p><p>环境：环境会接受智能体执行的一系列动作，并进行评价和转换成可量化的信号反馈给智能体。</p><p>核心要素：<strong>策略（Policy）</strong>、<strong>回报函数（收益信号，Reward Function）</strong>、<strong>价值函数（Value Function）</strong>和<strong>环境模型（Environment Model）</strong>，其中环境模型是可选的。</p><p>策略：定义了智能体在特定时间的行为方式。</p><p>回报函数：定义了强化学习问题中的目标。在每一步中，环境向智能体发送一个称为收益的标量数值。</p><p>价值函数：一个状态的价值是一个智能体从这个状态开始，对将来累积的总收益的期望。</p><p>环境模型：是一种对环境的反应模式的模拟。</p><h3 id="深度学习（Deep-Learning）和神经网络（Nerul-Network）"><a href="#深度学习（Deep-Learning）和神经网络（Nerul-Network）" class="headerlink" title="深度学习（Deep Learning）和神经网络（Nerul Network）"></a>深度学习（Deep Learning）和神经网络（Nerul Network）</h3><h2 id="机器学习步骤"><a href="#机器学习步骤" class="headerlink" title="机器学习步骤"></a>机器学习步骤</h2><h2 id="典型机器学习算法"><a href="#典型机器学习算法" class="headerlink" title="典型机器学习算法"></a>典型机器学习算法</h2><h3 id="回归算法"><a href="#回归算法" class="headerlink" title="回归算法"></a>回归算法</h3><h3 id="决策树"><a href="#决策树" class="headerlink" title="决策树"></a>决策树</h3><h3 id="随机森林"><a href="#随机森林" class="headerlink" title="随机森林"></a>随机森林</h3><h3 id="支持向量机（Support-Vector-Machine，SVM）"><a href="#支持向量机（Support-Vector-Machine，SVM）" class="headerlink" title="支持向量机（Support Vector Machine，SVM）"></a>支持向量机（Support Vector Machine，SVM）</h3><p>是一种实现二分类的分类模型，学习的是分类器，基本的模型定义是在特征空间上的间隔最大的线行分类器，学习策略是<strong>间隔最大化</strong>。</p><h3 id="贝叶斯算法"><a href="#贝叶斯算法" class="headerlink" title="贝叶斯算法"></a>贝叶斯算法</h3><p>基于贝叶斯定理（Bayes theorem）的方法，主要用于解决分类和回归的任务。</p><p>常见算法：朴素贝叶斯、平均单依赖估计、Bayesian Belief Network（BBN）</p><h4 id="朴素贝叶斯算法（Naive-Bayes）"><a href="#朴素贝叶斯算法（Naive-Bayes）" class="headerlink" title="朴素贝叶斯算法（Naive Bayes）"></a>朴素贝叶斯算法（Naive Bayes）</h4><p>常用于文本分析，</p><h3 id="基于实例的算法（Instance-Based-Learning，IBM）"><a href="#基于实例的算法（Instance-Based-Learning，IBM）" class="headerlink" title="基于实例的算法（Instance-Based Learning，IBM）"></a>基于实例的算法（Instance-Based Learning，IBM）</h3><p>储存所有的训练样本，根据训练实例和未知的测试实例的相似度度量（距离）预测新的数据的类别。</p><h4 id="k-最近邻域算法（k-Nearest-Neighbor，KNN）"><a href="#k-最近邻域算法（k-Nearest-Neighbor，KNN）" class="headerlink" title="k-最近邻域算法（k-Nearest Neighbor，KNN）"></a>k-最近邻域算法（k-Nearest Neighbor，KNN）</h4><p>用于分类，比较数据点的距离，并将每个点分配给它最近的组。简单而言，一个新的数据点距k个点的距离越近和越多，该数据就属于哪个类。</p><h3 id="神经网络（Nerual-Network，NN）"><a href="#神经网络（Nerual-Network，NN）" class="headerlink" title="神经网络（Nerual Network，NN）"></a>神经网络（Nerual Network，NN）</h3><h2 id="机器学习与算法关系图"><a href="#机器学习与算法关系图" class="headerlink" title="机器学习与算法关系图"></a>机器学习与算法关系图</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h1&gt;&lt;p&gt;人工智能、机器学习和深度学习的关系&lt;/p&gt;
&lt;p&gt;机器学习是实现人工智能的方法，深度学习是实现机器学习的技术，如图。机器学习的一系列算法可以</summary>
      
    
    
    
    
  </entry>
  
</feed>
